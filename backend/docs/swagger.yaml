definitions:
  model.City:
    properties:
      country:
        type: string
      find_name:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
    type: object
  model.Measurement:
    properties:
      city_id:
        type: integer
      ground_level:
        type: number
      humidity:
        type: integer
      id:
        type: integer
      max_temperature:
        type: number
      min_temperature:
        type: number
      pressure:
        type: number
      rain_intensity:
        type: number
      sea_level:
        type: number
      temperature:
        type: number
      timestamp:
        type: string
      weather:
        items:
          $ref: '#/definitions/model.MeasurementWeather'
        type: array
      wind_degrees:
        type: number
      wind_speed:
        type: number
    type: object
  model.MeasurementWeather:
    properties:
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      main:
        type: string
    type: object
info:
  contact: {}
paths:
  /current:
    get:
      consumes:
      - application/json
      description: Downloads weather data for a location for the past N days (default
        1 day)
      parameters:
      - description: City name
        in: query
        name: place
        type: string
      - description: Latitude of the location
        in: query
        name: latitude
        type: number
      - description: Longitude of the location
        in: query
        name: longitude
        type: number
      - description: Number of days in the past to fetch data for (default is 1)
        in: query
        name: count
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Measurement'
            type: array
      summary: Download and update recent weather data
      tags:
      - weather
  /generate:
    get:
      consumes:
      - application/json
      description: Generates and stores N random weather records (default is 1)
      parameters:
      - description: Number of random records to generate (default is 1)
        in: query
        name: count
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: null response
          schema: {}
      summary: Generate random weather data
      tags:
      - weather
  /rain-intensity:
    get:
      consumes:
      - application/json
      description: Retrieves cities that experienced rain of the specified intensity
        within a time interval
      parameters:
      - description: Start date in YYYY-MM-DD format
        in: query
        name: from
        required: true
        type: string
      - description: End date in YYYY-MM-DD format
        in: query
        name: to
        required: true
        type: string
      - description: Rain intensity threshold (e.g., mm/hour)
        in: query
        name: intensity
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.City'
            type: array
      summary: Get cities by rain intensity
      tags:
      - weather
  /retrieve:
    get:
      consumes:
      - application/json
      description: Retrieves weather measurements for a given city or coordinates
        within a specified time interval
      parameters:
      - description: City name
        in: query
        name: place
        type: string
      - description: Latitude of the location
        in: query
        name: latitude
        type: number
      - description: Longitude of the location
        in: query
        name: longitude
        type: number
      - description: Start date in YYYY-MM-DD format
        in: query
        name: from
        required: true
        type: string
      - description: End date in YYYY-MM-DD format
        in: query
        name: to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Measurement'
            type: array
      summary: Retrieve weather measurements
      tags:
      - weather
swagger: "2.0"
